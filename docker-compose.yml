version: '3.8'

services:
  # .NET 9 Backend API
  backend-api:
    build:
      context: ./src/BE
      dockerfile: Dockerfile
    container_name: dotnet-api
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_HTTP_PORTS=5000
    volumes:
      - ./logs/backend:/app/logs
    networks:
      - app-network
    restart: unless-stopped
    mem_limit: 384m
    cpus: 0.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Angular SSR Frontend
  frontend-ui:
    build:
      context: ./src/UI
      dockerfile: Dockerfile
    container_name: angular-ssr
    ports:
      - "4200:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - API_BASE_URL=http://backend-api:5000
    volumes:
      - ./logs/frontend:/app/logs
    networks:
      - app-network
    depends_on:
      - backend-api
    restart: unless-stopped
    mem_limit: 384m
    cpus: 0.4
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Optional: for SSL certificates
    depends_on:
      - frontend-ui
      - backend-api
    restart: unless-stopped
    mem_limit: 128m
    cpus: 0.2
    networks:
      - app-network

networks:
  app-network:
    driver: bridge